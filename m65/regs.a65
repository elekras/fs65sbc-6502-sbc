;
; inc_z
;
mrinc:
inc_zz:         inc 0, x
                bne inc_z0
                inc 1, x
inc_z0:         rts
;
; dec_z
;
mrdec:
dec_zz:         lda 0,x
                bne dec_z0
                dec 1,x
dec_z0:         dec 0,x
mrzer:
test_zz:        lda 0,x
                ora 1,x
                rts
;
; add_rb2ra
;
mradd:
add_rb2ra:      clc
                lda ra
                adc rb
                sta ra
                lda ra+1
                adc rb+1
                sta ra+1
                rts
;
; sub_rb2ra
;
mrsub:
sub_rb2ra:      sec
                lda ra
                sbc rb
                sta ra
                lda ra+1
                sbc rb+1
                sta ra+1
                rts
;
; cmp_ra2rb ra<rb c=0
;
mrcmp:
cmp_ra2rb:      lda ra+1
                cmp rb+1
                bcc cmp_ra2rbq
                bne cmp_ra2rbq
                lda ra
                cmp rb
cmp_ra2rbq:     rts
;
; equal_ra2rb
;
mrequ:
equal_ra2rb:    lda ra
                cmp rb
                bne equal_ra2rbq
                lda ra+1
                cmp rb+1
equal_ra2rbq:   rts
;
mr0:
zero_zz:
	stz 0,x
	sta 1,x
	rts

